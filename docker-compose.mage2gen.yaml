# #ddev-generated
# # Simple template to demonstrate mage2gen
# services:
#   mage2gen:
#     container_name: ddev-${DDEV_SITENAME}-mage2gen
#     image: busybox:stable
#     command: tail -f /dev/null
#     restart: "no"
#     # These labels ensure this service is discoverable by ddev.
#     labels:
#       com.ddev.site-name: ${DDEV_SITENAME}
#       com.ddev.approot: $DDEV_APPROOT

#     volumes:
#     - ".:/mnt/ddev_config"
#     - "ddev-global-cache:/mnt/ddev-global-cache"

version: '3.6'
services:
  mage2gen:
    image: mage2gen # This will be built from your Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "${DDEV_SITEROOT}:/usr/app/src"
    environment:
      - MYSQL_DB=${DDEV_DATABASE}
      - MYSQL_USERNAME=${DDEV_DATABASE_USER}
      - MYSQL_PASSWORD=${DDEV_DATABASE_PASSWORD}
      - MYSQL_HOST=${DDEV_DATABASE_HOST}
      - MYSQL_PORT=${DDEV_DATABASE_PORT}
      - SECRET_KEY=sdafdsfas # Replace with a secure key
      - USE_SQLITE=0 # Use MySQL by default
      - MODULE_GENERATION_PATH=/usr/app/src/app/code # Adjust if needed
    depends_on:
        - db
  db:
    extends:
      file: ${DDEV_GLOBAL_DIR}/docker-compose.db.yaml
      service: db